@model PhotoBooth.Models.Photo

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Изменение</h4>

        <div class="text-center">
            <a href="/EventImages/@Model.PhotoEventUuid/@Model.ImageName" target="_blank">
                <img class="thumbnail" src="~/App/img/loading.gif"
                     itemprop="thumbnail"
                     style="width: 150px; height: 150px;"
                     data-echo="/EventImages/@Model.PhotoEventUuid/@Model.PreviewImageName" alt="" />
            </a>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Created)

        <div class="form-group">
            @Html.LabelFor(model => model.LocalPathToImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LocalPathToImage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocalPathToImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BlobPathToImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BlobPathToImage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BlobPathToImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BlobPathToPreviewImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BlobPathToPreviewImage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BlobPathToPreviewImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Md5Hash, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Md5Hash, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Md5Hash, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhotoEventId, "PhotoEventId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PhotoEventId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PhotoEventId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageWidth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageWidth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageWidth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageHeight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageHeight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageHeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsDeleted, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад к списку фото для события", "EventPhotos", new { photoEventId = Model.PhotoEventId })
</div>



@section scripts
{
    <script src="~/Scripts/echo.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.nailthumb.1.1.min.js"></script>
    <script>
        $(".navbar").addClass("scroll-fixed-navbar");
        $(window).scroll(function() {
            "use strict";
            $(".navbar").addClass("scroll-fixed-navbar");
        });

        echo.init({
            offset: 100,
            throttle: 250,
            unload: false,
            //callback: function (element, op) {
            //    jQuery(element).nailthumb({ width: 150, height: 150 });
            //}
        });
        // echo.render(); is also available for non-scroll callbacks
    </script>
}