@model PhotoBooth.WebApp.Models.EmailRequest

@{
    ViewBag.Title = "Контакты";
}

@section header
{
    <!-- Start Header -->
    <header id="header">
        <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <!-- Start Logo / Text -->
                    <a class="navbar-brand text-logo" href="@Url.Action("Index", "Home")"><i class="icon-signout"></i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</a>
                    <!-- End Logo / Text -->
                </div>
                <!-- Start Navigation -->
                <div class="navbar-collapse collapse">
                    <ul class="nav navbar-nav menu-right">
                        <li><a href="@Url.Action("Index", "Home")#header">Главная</a></li>
                        <li class="dropdown">
                            <a href="#allServices" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Услуги</a>
                            <ul class="dropdown-menu">
                                <li><a href="@Url.Action("Fotobox","Home")">FOTOBOX</a></li>
                                <li><a href="@Url.Action("Brandbox","Home")">BRANDBOX</a></li>
                                <li><a href="@Url.Action("Instabox","Home")">INSTABOX</a></li>
                                <li><a href="@Url.Action("Socialmatic","Home")">SOCIALMATIC</a></li>
                                <li><a href="@Url.Action("Design","Home")">DESIGN</a></li>
                            </ul>
                        </li>
                        <li><a href="@Url.Action("Index", "Gallery")#photoGallery">Фотогалерея</a></li>
                        <li><a href="#contact">Контакты</a></li>
                    </ul>
                </div>
                <!-- End Navigation  -->
            </div>
        </nav>
    </header>
    <!-- End Header -->

    <style type="text/css">
        /* CSS REQUIRED */
        .state-icon {
            left: -5px;
        }

        .list-group-item-primary {
            color: rgb(255, 255, 255);
            background-color: #009d48;
        }

        /* DEMO ONLY - REMOVES UNWANTED MARGIN */
        .well .list-group {
            margin-bottom: 0px;
        }
    </style>

    <link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet"/>
}

<section id="contact" class="section">
    <div class="container">
        <div class="row">
            <div class="headline">
                <p>
                    Для оформления заказа, просто укажите свое имя, контактные данные, набор выбранных услуг и желаемую дату проведения мероприятия.
                </p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8">
                <!-- Start Contact Form  -->
                
                @using (Html.BeginForm("EmailRequest", "Home", FormMethod.Post, new { @class = "contact-form", data_toggle = "validator" }))
                {
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.name, new {id="name", @class="form-control", placeholder="Имя", name="name" })
                        @*<input name="name" id="name" type="text" class="form-control" placeholder="Имя">*@
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.phone, new {id="phone", @class="form-control", placeholder="Телефон", name="phone" })
                        @*<input name="phone" id="phone" type="text" class="form-control" placeholder="Телефон">*@
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.email, new {type="email", id="inputEmail", @class="form-control", placeholder="Email", data_error="Пожайлуста, введите верный адрес электронной почты", required="required" })
                        @*<input type="email" class="form-control" id="inputEmail" placeholder="Email" data-error="Пожайлуста, введите верный адрес электронной почты" required>*@
                        <div class="help-block with-errors"></div>
                    </div>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.datetime, new {id="datetime", @class="form-control datepicker", placeholder="Дата", name="datetime", required="required"  })
                        @*<input name="datetime" required id="datetime" type="text" class="form-control datepicker" placeholder="Дата">*@
                    </div>
                    <div class="form-group">
                        <ul class="list-group checked-list-box">
                            <li class="list-group-item" data-val="FotoboxSmall">Базовая аренда FotoBox</li>
                            <li class="list-group-item" data-val="Fotobox">Полная аренда FhotoBox</li>
                            <li class="list-group-item" data-val="Brandbox">Аренда брендбокса</li>
                            <li class="list-group-item" data-val="Instabox">Аренда InstaBox</li>
                            <li class="list-group-item" data-val="Socialmatic">Аренда Socialmatic</li>
                            <li class="list-group-item" data-val="DesignBrand">Брендирование корпуса</li>
                            <li class="list-group-item" data-val="DesignPhotoZone">Дизайн фотозоны FotoBox</li>
                            <li class="list-group-item" data-val="DesignPressWall">PressWall для FotoBox или BrandBox</li>
                            <li class="list-group-item" data-val="DesignAccessorize">Набор аксессуаров для фото</li>
                        </ul>
                        @Html.HiddenFor(m => m.service, new {id="service", @class="form-control", placeholder="Услуги", name="service" })
                        @*<input style="display: none" name="service" id="service" type="text" class="form-control" placeholder="Услуги">*@
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-default btn-submit ">Отправить заявку на заказ</button>
                    </div>
                }
                <!-- End Contact Form  -->
            </div>
            <div class="col-md-4">
                <div class="contact-info">
                    <!-- Start Contact Details  -->
                    <ul class="contact-list">
                        <li><i class="fa fa-phone"></i>+79264000420</li>
                        <li><i class="fa fa-envelope-o"></i><a href="mailto:info@joyenjoy.me">info@joyenjoy.me</a></li>
                    </ul>
                    <!-- End Contact Details  -->
                </div>
                <hr />
                <div class="social">
                    <!-- Start  Social Links -->
                    <ul class="social">
                        <li class="vk"> <a href="https://vk.com/club102296476" target="_blank"> <i class="fa fa-vk"></i> </a> </li>
                        <li class="facebook"> <a href="http://facebook.com/www.joyenjoy.me" target="_blank"> <i class="fa fa-facebook"></i> </a> </li>
                        <li class="instagram"> <a href="http://instagram.com/joyenjoy.me" target="_blank"> <i class="fa fa-instagram"></i> </a> </li>
                        <li class="youtube"> <a href="http://www.youtube.com/channel/UCIdZo7Wy5g_zu-B3Bn1hqfw" target="_blank"> <i class="fa fa-youtube-play"></i> </a> </li>
                    </ul>
                    <!-- End Social Links  -->
                </div>
            </div>
        </div>
    </div>
</section>

@section scripts
{
    <script src="~/App/js/validator.js"></script>

    <script src="~/Scripts/moment-with-locales.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <script src="~/Scripts/PhotoBooth.js"></script>

    <script type="text/javascript">
        function getParameterByName(name) {
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);
            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }

        var services = getParameterByName('services');
        if (services) {
            $('.list-group.checked-list-box .list-group-item').each(function () {
                if ($(this).data('val') == services) {
                    $(this).data('checked', true);
                }
            });
        }

        $(".navbar").addClass("scroll-fixed-navbar");
        $(window).scroll(function () {
            "use strict";
            $(".navbar").addClass("scroll-fixed-navbar");
        });

        $(function () {
            $('.list-group.checked-list-box .list-group-item').each(function () {
                // Settings
                var $widget = $(this),
                    $checkbox = $('<input type="checkbox" class="hidden" />'),
                    color = ($widget.data('color') ? $widget.data('color') : "primary"),
                    style = ($widget.data('style') == "button" ? "btn-" : "list-group-item-"),
                    settings = {
                        on: {
                            icon: 'glyphicon glyphicon-check'
                        },
                        off: {
                            icon: 'glyphicon glyphicon-unchecked'
                        }
                    };

                $widget.css('cursor', 'pointer');
                $widget.append($checkbox);

                // Event Handlers
                $widget.on('click', function () {
                    $checkbox.prop('checked', !$checkbox.is(':checked'));
                    $checkbox.triggerHandler('change');
                    updateDisplay();
                });
                $checkbox.on('change', function () {
                    updateDisplay();
                });

                function writeData() {
                    var checkedItems = new Array();
                    $(".checked-list-box li.active").each(function (idx, li) {
                        checkedItems.push($(li).text());
                    });
                    $('#service').val(JSON.stringify(checkedItems));
                };

                // Actions
                function updateDisplay() {
                    var isChecked = $checkbox.is(':checked');

                    // Set the button's state
                    $widget.data('state', (isChecked) ? "on" : "off");

                    // Set the button's icon
                    $widget.find('.state-icon')
                        .removeClass()
                        .addClass('state-icon ' + settings[$widget.data('state')].icon);

                    // Update the button's color
                    if (isChecked) {
                        $widget.addClass(style + color + ' active');
                    } else {
                        $widget.removeClass(style + color + ' active');
                    }

                    writeData();
                }

                // Initialization
                function init() {
                    if ($widget.data('checked') == true) {
                        $checkbox.prop('checked', !$checkbox.is(':checked'));
                    }

                    updateDisplay();

                    // Inject the icon if applicable
                    if ($widget.find('.state-icon').length == 0) {
                        $widget.prepend('<span class="state-icon ' + settings[$widget.data('state')].icon + '"></span>');
                    }
                }

                init();
            });

        });
    </script>
}